DEFINITION MODULE m2convert ;

FROM m2tree IMPORT Tree ;
FROM m2linemap IMPORT location_t ;


(*
   ToWord - converts an expression (Integer or Ordinal type) into
            a WORD.
*)

PROCEDURE ToWord (location: location_t; expr: Tree) : Tree ;


(*
   ToCardinal - convert an expression, expr, to a CARDINAL.
*)

PROCEDURE ToCardinal (location: location_t; expr: Tree) : Tree ;


(*
   ToInteger - convert an expression, expr, to an INTEGER.
*)

PROCEDURE ToInteger (location: location_t; expr: Tree) : Tree ;


(*
   ToBitset - convert an expression, expr, to a BITSET.
*)

PROCEDURE ToBitset (location: location_t; expr: Tree) : Tree ;


(*
   ConvertToPtr - convert an expression to a void *.
*)

PROCEDURE ConvertToPtr (p: Tree) : Tree ;


(*
    BuildConvert - build and return tree VAL(type, value)
                   checkOverflow determines whether we
                   should suppress overflow checking.
*)

PROCEDURE BuildConvert (location: location_t; type: Tree; value: Tree; checkOverflow: BOOLEAN) : Tree ;


(*
   ConvertConstantAndCheck - in Modula-2 sementics: return( VAL(type, expr) )
                             Only to be used for a constant expr,
                             overflow checking is performed. 
*)

PROCEDURE ConvertConstantAndCheck (location: location_t; type: Tree; expr: Tree) : Tree ;


(*
   ConvertString - converts string, expr, into a string of type, type.
*)

PROCEDURE ConvertString (type, expr: Tree) : Tree ;


(*
   GenericToType - converts, expr, into, type, providing that expr is
                   a generic system type (byte, word etc).  Otherwise
                   expr is returned unaltered.
*)

PROCEDURE GenericToType (location: location_t; type, expr: Tree) : Tree ;


END m2convert.
