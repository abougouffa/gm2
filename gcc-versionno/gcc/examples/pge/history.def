(* Copyright (C) 2011 Free Software Foundation, Inc. *)
(* This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

GNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with gm2; see the file COPYING.  If not, write to the Free Software
Foundation, 51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301, USA. *)

DEFINITION MODULE history ;

(*
    Title      : history
    Author     : Gaius Mulley
    System     : GNU Modula-2
    Date       : Wed Oct 24 12:43:32 2012
    Revision   : $Version$ 
    Description: provides a mechanism for maintaining a collision history.
*)

FROM coord IMPORT Coord ;
FROM twoDsim IMPORT whereHit ;


(*
   isDuplicate - returns TRUE if the collision at, position,
                 and, time, has occurred before.
                 The time must be the absolute time of the collision.
*)

PROCEDURE isDuplicate (currentTime, relTime: REAL;
                       id1, id2: CARDINAL; w1, w2: whereHit) : BOOLEAN ;


(*
   occurred - mark the collision as having occurred.
*)

PROCEDURE occurred (currentTime: REAL; id1, id2: CARDINAL) ;


(*
   purge - remove all collision history which has never occurred.
*)

PROCEDURE purge ;


(*
   removeOlderHistory - remove older entries than, currentTime.
                        This should only be called once a collision
                        has been found, we need to do this as we assume
                        any future event may be null and void after an
                        earlier collision.
*)

PROCEDURE removeOlderHistory (currentTime: REAL) ;


(*
   forgetHistory - forget the complete history list.
*)

PROCEDURE forgetHistory ;


END history.
