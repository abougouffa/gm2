Warning
=======

This code is currently in development, it is very incomplete &
highly likely to create massive core dumps. Patches and
development volunteers highly welcome! See contributions at
the bottom of this file.

Please see the gm2.texi file for furthur info

Getting GNU Modula-2
====================

To get GM2 type the following:

   export CVSROOT=:pserver:anoncvs@floppsie.comp.glam.ac.uk:/usr/src/cvs
   cvs login
   cvs -z9 checkout GM2

(note the capital GM2 in the checkout, GM2 is the project module within cvs).
This will checkout a copy of GNU Modula-2 into one subdirectory: gm2

This (very development, very buggy, highly unstable)
version of GM2 needs to be placed inside an egcs directory tree in
the position egcs-version/gcc before GNU Modula-2 can be built.

Assuming that both egcs and gm2 are at the same directory level, type:
   
   mv gm2 egcs-20000103/gcc

From now on egcs-20000103 will be called egcs-version for simplicity.
The gm2.texi file outlines the strategy for generating gm2 from the
m2f source tree. The gm2.texi file also describes the history of m2f.

You can get egcs-20000103 from my machine
ftp://floppsie.comp.glam.ac.uk/pub/c but be warned it is large
(approximately 14 MB). Originally I had gcc-2.8.1 checked into the cvs
source tree together with GM2, but since egcs has grown in size and
the changes to egcs are inconsequential I've separated the two.
You might already have a copy of egcs and if you're a modem user you
might be very glad of this :-)

The only modification to egcs so far is in gcc/rtl.c to the abort function
so that the finger of blame is pointed in my direction.

Here is the change I made to gcc/rtl.c:


/* Report an internal compiler error in a friendly manner and without
   dumping core.  */

void
fancy_abort (file, line, function)
     const char *file;
     int line;
     const char *function;
{
  if (function == NULL)
    function = "?";
  fatal (
#if defined(GM2)
	 /*
	  *  point the finger of suspicion towards GM2 not GCC
	  */
"Internal compiler error in `%s', at %s:%d\n\
Please submit a full bug report to <gaius@glam.ac.uk>\n",
#else
"Internal compiler error in `%s', at %s:%d\n\
Please submit a full bug report.\n\
See <URL:http://www.gnu.org/software/gcc/faq.html#bugreport> \
for instructions.",
#endif
	 function, trim_filename (file), line);
}

Building GNU Modula-2
=====================

To build gm2 type:
   cd egcs-version ; ./configure ; make

A simple test
=============

you should be able to perform:

compile
   ./xgm2 -B./x -c -g -Igm2/gm2-libs -Igm2/m2/comp/libs gm2/m2/comp/libs/hello.mod
link
   ./xgm2 -B./x -g -Igm2/gm2-libs -Igm2/m2/comp/libs gm2/m2/comp/libs/hello.mod

this should result in creating an a.out for the infamous hello world example.

Building m2f
============

To build the original m2f without gcc codegenerator type:

   cd egcs-version/gcc/gm2/m2/comp ; make clean reconfig ; make all

Note that you have to be on a [3456]86 GNU/Linux box to do this.
It will generate a [345]86 codegenerator and an x86 tiny
model codegenerator.

To install m2f type:

   su
   make install

Contributing to GNU Modula-2
============================

Please do. But also please read the GNU Emacs info under

* Standards: (standards).       GNU coding standards.
* Intellectual Property::       Keeping Free Software Free
* Reading Non-Free Code::       Referring to Proprietary Programs
* Contributions::               Accepting Contributions

before you start coding

many thanks and enjoy your coding!
