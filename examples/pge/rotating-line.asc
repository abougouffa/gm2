
Maxima 5.27.0 http://maxima.sourceforge.net
using Lisp GNU Common Lisp (GCL) GCL 2.6.7 (a.k.a. GCL)
Distributed under the GNU Public License. See the file COPYING.
Dedicated to the memory of William Schelter.
The function bug_report() provides bug reporting information.
(%i1)                      batch(rotating-line.mxm)

read and interpret file: #p/home/gaius/GM2/graft-4.7.1/gcc-4.7.1/gcc/gm2/examples/pge/rotating-line.mxm
                                       4    2
                                      X    X
(%i2)                         O(X) := -- - -- + 1
                                      4    2
                                       4    2
                                      X    X
(%o2)                         O(X) := -- - -- + 1
                                      4    2
                                        %pi
(%i3)                         S(X) := O(--- - X)
                                         2
                                        %pi
(%o3)                         S(X) := O(--- - X)
                                         2
(%i4)                            load(format)
                         2                                2
                      c t                              i t
(%i5) (d S(f + e t) + ---- + b t + a - (j S(l + k t) + ---- + h t + g)) 64 = 0
                       2                                2
                            %pi 4                %pi 2
               (- k t - l + ---)    (- k t - l + ---)
                             2                    2
(%o5) 64 (- j (------------------ - ------------------ + 1)
                       4                    2
                   %pi 4                %pi 2
      (- e t - f + ---)    (- e t - f + ---)            2      2
                    2                    2           i t    c t
 + d (------------------ - ------------------ + 1) - ---- + ---- - h t + b t
              4                    2                  2      2
 - g + a) = 0
(%i6)                              expand(%)
              4  4         4  4         3    3             3  3         3    3
(%o6) - 16 j k  t  + 16 d e  t  - 64 j k  l t  + 32 %pi j k  t  + 64 d e  f t
             3  3         2  2  2             2    2         2    2  2
 - 32 %pi d e  t  - 96 j k  l  t  + 96 %pi j k  l t  - 24 %pi  j k  t
         2  2         2         2  2  2             2    2         2    2  2
 + 32 j k  t  - 32 i t  + 96 d e  f  t  - 96 %pi d e  f t  + 24 %pi  d e  t
         2  2         2           3                 2           2
 - 32 d e  t  + 32 c t  - 64 j k l  t + 96 %pi j k l  t - 48 %pi  j k l t
                     3                                         3
 + 64 j k l t + 8 %pi  j k t - 32 %pi j k t - 64 h t + 64 d e f  t
               2           2                             3
 - 96 %pi d e f  t + 48 %pi  d e f t - 64 d e f t - 8 %pi  d e t + 32 %pi d e t
                  4             3         2    2         2        3
 + 64 b t - 16 j l  + 32 %pi j l  - 24 %pi  j l  + 32 j l  + 8 %pi  j l
                   4          2                         4             3
 - 32 %pi j l - %pi  j + 8 %pi  j - 64 j - 64 g + 16 d f  - 32 %pi d f
         2    2         2        3                       4          2
 + 24 %pi  d f  - 32 d f  - 8 %pi  d f + 32 %pi d f + %pi  d - 8 %pi  d + 64 d
 + 64 a = 0
(%i7)                             ratsimp(%)
             4         4   4            3               3         3
(%o7) (16 d e  - 16 j k ) t  + (- 64 j k  l + 32 %pi j k  + 64 d e  f
             3   3            2  2             2                 2     2
 - 32 %pi d e ) t  + (- 96 j k  l  + 96 %pi j k  l + (32 - 24 %pi ) j k  - 32 i
         2  2             2            2          2          2
 + 96 d e  f  - 96 %pi d e  f + (24 %pi  - 32) d e  + 32 c) t
              3               2               2                3
 + (- 64 j k l  + 96 %pi j k l  + (64 - 48 %pi ) j k l + (8 %pi  - 32 %pi) j k
                  3               2          2
 - 64 h + 64 d e f  - 96 %pi d e f  + (48 %pi  - 64) d e f
                  3                        4             3
 + (32 %pi - 8 %pi ) d e + 64 b) t - 16 j l  + 32 %pi j l
               2     2         3                       4        2
 + (32 - 24 %pi ) j l  + (8 %pi  - 32 %pi) j l + (- %pi  + 8 %pi  - 64) j
                4             3          2          2                  3
 - 64 g + 16 d f  - 32 %pi d f  + (24 %pi  - 32) d f  + (32 %pi - 8 %pi ) d f
       4        2
 + (%pi  - 8 %pi  + 64) d + 64 a = 0
(%i8)                         format(%, %poly(t))
             4         4   4            3               3         3
(%o8) (16 d e  - 16 j k ) t  + (- 64 j k  l + 32 %pi j k  + 64 d e  f
             3   3            2  2             2                 2     2
 - 32 %pi d e ) t  + (- 96 j k  l  + 96 %pi j k  l + (32 - 24 %pi ) j k  - 32 i
         2  2             2            2          2          2
 + 96 d e  f  - 96 %pi d e  f + (24 %pi  - 32) d e  + 32 c) t
              3               2               2                3
 + (- 64 j k l  + 96 %pi j k l  + (64 - 48 %pi ) j k l + (8 %pi  - 32 %pi) j k
                  3               2          2
 - 64 h + 64 d e f  - 96 %pi d e f  + (48 %pi  - 64) d e f
                  3                        4             3
 + (32 %pi - 8 %pi ) d e + 64 b) t - 16 j l  + 32 %pi j l
               2     2         3                       4        2
 + (32 - 24 %pi ) j l  + (8 %pi  - 32 %pi) j l + (- %pi  + 8 %pi  - 64) j
                4             3          2          2                  3
 - 64 g + 16 d f  - 32 %pi d f  + (24 %pi  - 32) d f  + (32 %pi - 8 %pi ) d f
       4        2
 + (%pi  - 8 %pi  + 64) d + 64 a = 0
(%i9)                               quit()
