(* Copyright (C) 2001 Free Software Foundation, Inc. *)
(* This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

GNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with gm2; see the file COPYING.  If not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA. *)
DEFINITION MODULE M2AsmUtil ;

(*
   Author     : Gaius Mulley
   Title      : M2AsmUtil
   Date       : Thu Feb  1 15:34:08 GMT 1990
   Description: Provides utilities relating symbols in the SymbolTable
                to their equalalent representation in ASM format.
*)

FROM DynamicStrings IMPORT String ;
FROM NameKey IMPORT Name ;
EXPORT QUALIFIED WriteAsmName, WriteName, GetAsmName, GetFullSymName,
                 UnderScoreString, DotifyLabel, GetModuleInitName,
                 GetFullScopeAsmName ;


(*
   DotifyLabel - place a dot infront of the label if necessary.
                 The string, s, should no longer be used after
                 this function. A new string is returned.
*)

PROCEDURE DotifyLabel (s: String) : String ;


(*
   WriteAsmName - displays the symbol, Sym, name using module prefixes
                  if it is EXPORT QUALIFIED.
*)

PROCEDURE WriteAsmName (Sym: CARDINAL) ;


(*
   WriteName - writes out the symbol, Sym, name using module prefixes
               if it is EXPORT QUALIFIED.
               The procedure differs from the above because it does
               not generate any _ prefix to the name.
*)

PROCEDURE WriteName (Sym: CARDINAL) ;


(*
   GetAsmName - returns the NameKey for the assembler string of a symbol.
*)

PROCEDURE GetAsmName (Sym: CARDINAL) : Name ;


(*
   GetFullSymName - returns the NameKey for the symbol name (which also
                    may contain the module name). This is the same as
                    GetAsmName except that it does not have the leading _
*)

PROCEDURE GetFullSymName (Sym: CARDINAL) : Name ;


(*
   GetFullScopeAsmName - returns the fully qualified name for the symbol.
                         This will take the format
                         [DefImpModule|Module]_{InnerModule}_{Procedure}_SymbolName
*)

PROCEDURE GetFullScopeAsmName (Sym: CARDINAL) : Name ;


(*
   UnderScoreString - emits a string with a leading underscore if the C compiler
                      uses _ prefixes. The string without the underscore is returned.
*)

PROCEDURE UnderScoreString (s: String) : String ;


(*
   GetModuleInitName - returns the name of the initialization section of a module.
*)

PROCEDURE GetModuleInitName (Sym: CARDINAL) : Name ;


END M2AsmUtil.
