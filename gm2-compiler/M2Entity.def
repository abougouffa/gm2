(* Copyright (C) 2001 Free Software Foundation, Inc. *)
(* This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

GNU Modula-2 is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with gm2; see the file COPYING.  If not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02110-1301, USA. *)
DEFINITION MODULE M2Entity ;

(*
    Title      : M2Entity
    Author     : Gaius Mulley
    System     : UNIX (gm2)
    Date       : Tue Feb 18 11:46:36 1997
    Description: provides a variable entity manipulation package.
*)

EXPORT QUALIFIED Entity,
                 InitEntities,
                 HasLValue,
                 FindLatestEntity, GetLatestEntity,
                 IsEntityClean, IsLValue,
                 MakeEntityDirty, MakeEntityClean,
                 GiveEntityIndex, GetEntityIndex, GetEntitySym, MakeNewEntity ;

TYPE
   Entity ;


(*
   InitEntities - destroy all entities.
*)

PROCEDURE InitEntities ;


(*
   FindLatestEntity - returns the latest entity, possibly NulEntity.
                      It does not create one.
*)

PROCEDURE FindLatestEntity (Sym: CARDINAL; IsLeft: BOOLEAN) : Entity ;


(*
   GetLatestEntity - returns the latest entity of a variable.
                     It will create one if necessary.
*)

PROCEDURE GetLatestEntity (tokenno: CARDINAL; Sym: CARDINAL; IsLeft: BOOLEAN; Index: CARDINAL) : Entity ;


(*
   IsEntityClean - returns TRUE if the entity, e, is clean.
*)

PROCEDURE IsEntityClean (e: Entity) : BOOLEAN ;


(*
   IsLValue - returns TRUE if entity, e, is an LValue
*)

PROCEDURE IsLValue (e: Entity) : BOOLEAN ;


(*
   MakeEntityDirty - 
*)

PROCEDURE MakeEntityDirty (e: Entity) ;


(*
   MakeEntityClean - 
*)

PROCEDURE MakeEntityClean (e: Entity) ;


(*
   GiveEntityIndex - 
*)

PROCEDURE GiveEntityIndex (e: Entity; index: CARDINAL) ;


(*
   GetEntityIndex - 
*)

PROCEDURE GetEntityIndex (e: Entity) : CARDINAL ;


(*
   GetEntitySym - 
*)

PROCEDURE GetEntitySym (e: Entity) : CARDINAL ;


(*
   MakeNewEntity - makes a new entity for symbol, Sym.
*)

PROCEDURE MakeNewEntity (tokenno: CARDINAL; Sym: CARDINAL; IsLeft: BOOLEAN; Index: CARDINAL) : Entity ;


(*
   HasLValue - returns TRUE if symbol, Sym, has an LValue
*)

PROCEDURE HasLValue (Sym: CARDINAL) : BOOLEAN ;


END M2Entity.
